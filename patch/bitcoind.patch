From 306021abb9b015a44ea136383f2f16b66c36a89c Mon Sep 17 00:00:00 2001
From: naituida <dyzz@mail.ustc.edu.cn>
Date: Wed, 4 Sep 2013 10:27:56 +0800
Subject: [PATCH 19/19] orphan size to 0;std tx size to 10k

---
 src/main.cpp | 2 +-
 src/main.h   | 3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/main.cpp b/src/main.cpp
index cb0ecdc..fab1030 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -297,7 +297,7 @@ bool AddOrphanTx(const CTransaction& tx)
     // 10,000 orphans, each of which is at most 5,000 bytes big is
     // at most 500 megabytes of orphans:
     unsigned int sz = tx.GetSerializeSize(SER_NETWORK, CTransaction::CURRENT_VERSION);
-    if (sz > 5000)
+    if (sz > 0)
     {
         printf("ignoring large orphan tx (size: %u, hash: %s)\n", sz, hash.ToString().c_str());
         return false;
diff --git a/src/main.h b/src/main.h
index d5cd4cf..a31046a 100644
--- a/src/main.h
+++ b/src/main.h
@@ -29,7 +29,8 @@ static const unsigned int MAX_BLOCK_SIZE = 1000000;
 /** The maximum size for mined blocks */
 static const unsigned int MAX_BLOCK_SIZE_GEN = MAX_BLOCK_SIZE/2;
 /** The maximum size for transactions we're willing to relay/mine */
-static const unsigned int MAX_STANDARD_TX_SIZE = MAX_BLOCK_SIZE_GEN/5;
+/* static const unsigned int MAX_STANDARD_TX_SIZE = MAX_BLOCK_SIZE_GEN/5; */
+static const unsigned int MAX_STANDARD_TX_SIZE = 10000;
 /** The maximum allowed number of signature check operations in a block (network rule) */
 static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;
 /** The maximum number of orphan transactions kept in memory */
-- 
1.8.4.rc4

